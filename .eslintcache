[{"F:\\Projects\\React_projects\\admiral_admin\\src\\index.js":"1","F:\\Projects\\React_projects\\admiral_admin\\src\\reportWebVitals.js":"2","F:\\Projects\\React_projects\\admiral_admin\\src\\App.js":"3","F:\\Projects\\React_projects\\admiral_admin\\src\\modules\\AdmiralController.jsx":"4","F:\\Projects\\React_projects\\admiral_admin\\src\\modules\\HeadingAndSubheading\\HeadingAndSubheading.jsx":"5","F:\\Projects\\React_projects\\admiral_admin\\src\\modules\\TextAndImage\\TextAndImage.jsx":"6","F:\\Projects\\React_projects\\admiral_admin\\src\\parts\\Admin\\Admin.jsx":"7","F:\\Projects\\React_projects\\admiral_admin\\src\\parts\\Public\\Public.jsx":"8","F:\\Projects\\React_projects\\admiral_admin\\src\\parts\\Admin\\components\\Main\\Main.jsx":"9","F:\\Projects\\React_projects\\admiral_admin\\src\\parts\\Admin\\components\\Header\\Header.jsx":"10","F:\\Projects\\React_projects\\admiral_admin\\src\\parts\\Admin\\components\\Dashboard\\Dashboard.jsx":"11","F:\\Projects\\React_projects\\admiral_admin\\src\\parts\\Admin\\components\\NotFound\\NotFound.jsx":"12","F:\\Projects\\React_projects\\admiral_admin\\src\\parts\\Admin\\components\\Aside\\Aside.jsx":"13","F:\\Projects\\React_projects\\admiral_admin\\src\\parts\\Admin\\components\\Header\\styled.js":"14","F:\\Projects\\React_projects\\admiral_admin\\src\\parts\\Admin\\components\\HeaderDropdown\\HeaderDropdown.jsx":"15","F:\\Projects\\React_projects\\admiral_admin\\src\\parts\\Admin\\components\\HeaderDropdown\\styled.js":"16","F:\\Projects\\React_projects\\admiral_admin\\src\\redux\\store.js":"17","F:\\Projects\\React_projects\\admiral_admin\\src\\redux\\themes-reducer.js":"18","F:\\Projects\\React_projects\\admiral_admin\\src\\api\\api.js":"19","F:\\Projects\\React_projects\\admiral_admin\\src\\parts\\Admin\\components\\Aside\\styled.js":"20","F:\\Projects\\React_projects\\admiral_admin\\src\\parts\\Admin\\components\\Breadcrumbs\\Breadcrumbs.jsx":"21","F:\\Projects\\React_projects\\admiral_admin\\src\\parts\\Admin\\components\\Breadcrumbs\\styled.js":"22","F:\\Projects\\React_projects\\admiral_admin\\src\\parts\\Admin\\components\\styled\\CardHeader.js":"23","F:\\Projects\\React_projects\\admiral_admin\\src\\parts\\Admin\\components\\styled\\CardTitle.js":"24","F:\\Projects\\React_projects\\admiral_admin\\src\\parts\\Admin\\components\\common\\CrudTable.jsx":"25","F:\\Projects\\React_projects\\admiral_admin\\src\\parts\\Admin\\components\\styled\\CrudTableContainer.js":"26","F:\\Projects\\React_projects\\admiral_admin\\src\\parts\\Admin\\components\\common\\Checkbox.jsx":"27","F:\\Projects\\React_projects\\admiral_admin\\src\\parts\\Admin\\components\\common\\ActionsWrapper.jsx":"28","F:\\Projects\\React_projects\\admiral_admin\\src\\parts\\Admin\\components\\common\\Action.jsx":"29","F:\\Projects\\React_projects\\admiral_admin\\src\\parts\\Admin\\components\\common\\ButtonsWrapper.jsx":"30","F:\\Projects\\React_projects\\admiral_admin\\src\\parts\\Admin\\components\\common\\Pagination.jsx":"31","F:\\Projects\\React_projects\\admiral_admin\\src\\parts\\Admin\\components\\common\\AdmiralNavlink.jsx":"32","F:\\Projects\\React_projects\\admiral_admin\\src\\parts\\Admin\\components\\common\\formControlls\\SubmitButton.jsx":"33","F:\\Projects\\React_projects\\admiral_admin\\src\\parts\\Admin\\components\\styled\\StyledNotification.js":"34","F:\\Projects\\React_projects\\admiral_admin\\src\\parts\\Admin\\utils\\validators\\validators.js":"35","F:\\Projects\\React_projects\\admiral_admin\\src\\parts\\Admin\\utils\\notifications\\notifications.js":"36","F:\\Projects\\React_projects\\admiral_admin\\src\\parts\\Admin\\components\\CRUDs\\Themes\\List.jsx":"37","F:\\Projects\\React_projects\\admiral_admin\\src\\parts\\Admin\\components\\CRUDs\\Themes\\View.jsx":"38","F:\\Projects\\React_projects\\admiral_admin\\src\\parts\\Admin\\components\\CRUDs\\Themes\\Create.jsx":"39","F:\\Projects\\React_projects\\admiral_admin\\src\\parts\\Admin\\components\\CRUDs\\Themes\\Update.jsx":"40","F:\\Projects\\React_projects\\admiral_admin\\src\\redux\\app-reducer.js":"41","F:\\Projects\\React_projects\\admiral_admin\\src\\parts\\Admin\\components\\styled\\FilterContainer.js":"42","F:\\Projects\\React_projects\\admiral_admin\\src\\parts\\Admin\\components\\common\\formControlls\\CustomField.jsx":"43","F:\\Projects\\React_projects\\admiral_admin\\src\\parts\\Admin\\components\\Login\\Login.jsx":"44","F:\\Projects\\React_projects\\admiral_admin\\src\\parts\\Admin\\components\\AdminWrapper\\AdminWrapper.jsx":"45","F:\\Projects\\React_projects\\admiral_admin\\src\\redux\\auth-reducer.js":"46"},{"size":761,"mtime":1609668638946,"results":"47","hashOfConfig":"48"},{"size":362,"mtime":499162500000,"results":"49","hashOfConfig":"48"},{"size":1017,"mtime":1609669236926,"results":"50","hashOfConfig":"48"},{"size":689,"mtime":1608554550409,"results":"51","hashOfConfig":"48"},{"size":190,"mtime":1608554563124,"results":"52","hashOfConfig":"48"},{"size":174,"mtime":1608553818252,"results":"53","hashOfConfig":"48"},{"size":851,"mtime":1610445029485,"results":"54","hashOfConfig":"48"},{"size":284,"mtime":1609669253566,"results":"55","hashOfConfig":"48"},{"size":759,"mtime":1610353787001,"results":"56","hashOfConfig":"48"},{"size":1198,"mtime":1609669275466,"results":"57","hashOfConfig":"48"},{"size":509,"mtime":1610278793601,"results":"58","hashOfConfig":"48"},{"size":152,"mtime":1609313194889,"results":"59","hashOfConfig":"48"},{"size":1830,"mtime":1609669169013,"results":"60","hashOfConfig":"48"},{"size":3678,"mtime":1609324922314,"results":"61","hashOfConfig":"48"},{"size":1493,"mtime":1609582119692,"results":"62","hashOfConfig":"48"},{"size":3488,"mtime":1609669350917,"results":"63","hashOfConfig":"48"},{"size":569,"mtime":1610448999794,"results":"64","hashOfConfig":"48"},{"size":6392,"mtime":1610450689936,"results":"65","hashOfConfig":"48"},{"size":196,"mtime":1610383370440,"results":"66","hashOfConfig":"48"},{"size":2847,"mtime":1609668907767,"results":"67","hashOfConfig":"48"},{"size":621,"mtime":1610278085947,"results":"68","hashOfConfig":"48"},{"size":869,"mtime":1609669935317,"results":"69","hashOfConfig":"48"},{"size":227,"mtime":1609742843140,"results":"70","hashOfConfig":"48"},{"size":273,"mtime":1609743004479,"results":"71","hashOfConfig":"48"},{"size":1007,"mtime":1609744757273,"results":"72","hashOfConfig":"48"},{"size":1974,"mtime":1610281983235,"results":"73","hashOfConfig":"48"},{"size":1744,"mtime":1610210665892,"results":"74","hashOfConfig":"48"},{"size":2910,"mtime":1609830580013,"results":"75","hashOfConfig":"48"},{"size":821,"mtime":1610211030064,"results":"76","hashOfConfig":"48"},{"size":137,"mtime":1609836216042,"results":"77","hashOfConfig":"48"},{"size":2536,"mtime":1609854708700,"results":"78","hashOfConfig":"48"},{"size":1795,"mtime":1609927289700,"results":"79","hashOfConfig":"48"},{"size":2244,"mtime":1610452146368,"results":"80","hashOfConfig":"48"},{"size":1645,"mtime":1610450893804,"results":"81","hashOfConfig":"48"},{"size":110,"mtime":1610186517087,"results":"82","hashOfConfig":"48"},{"size":571,"mtime":1610452216823,"results":"83","hashOfConfig":"48"},{"size":8617,"mtime":1610353907350,"results":"84","hashOfConfig":"48"},{"size":3047,"mtime":1610278631782,"results":"85","hashOfConfig":"48"},{"size":2470,"mtime":1610352607083,"results":"86","hashOfConfig":"48"},{"size":3537,"mtime":1610278560466,"results":"87","hashOfConfig":"48"},{"size":954,"mtime":1610448974945,"results":"88","hashOfConfig":"48"},{"size":672,"mtime":1610354044310,"results":"89","hashOfConfig":"48"},{"size":1202,"mtime":1610362861734,"results":"90","hashOfConfig":"48"},{"size":3702,"mtime":1610452103721,"results":"91","hashOfConfig":"48"},{"size":2031,"mtime":1610450151103,"results":"92","hashOfConfig":"48"},{"size":2718,"mtime":1610451183713,"results":"93","hashOfConfig":"48"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},"1qozq6q",{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"107"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"118","usedDeprecatedRules":"96"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"155","usedDeprecatedRules":"96"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"160","usedDeprecatedRules":"96"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"163","usedDeprecatedRules":"96"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"166","messages":"167","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"168","messages":"169","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"172","messages":"173","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"174","usedDeprecatedRules":"96"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"177","usedDeprecatedRules":"96"},{"filePath":"178","messages":"179","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"180","usedDeprecatedRules":"96"},{"filePath":"181","messages":"182","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"183","usedDeprecatedRules":"96"},{"filePath":"184","messages":"185","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"186","messages":"187","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"188","messages":"189","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"190","messages":"191","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"192","messages":"193","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"194","messages":"195","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"F:\\Projects\\React_projects\\admiral_admin\\src\\index.js",[],["196","197"],"F:\\Projects\\React_projects\\admiral_admin\\src\\reportWebVitals.js",[],"F:\\Projects\\React_projects\\admiral_admin\\src\\App.js",[],"F:\\Projects\\React_projects\\admiral_admin\\src\\modules\\AdmiralController.jsx",[],"F:\\Projects\\React_projects\\admiral_admin\\src\\modules\\HeadingAndSubheading\\HeadingAndSubheading.jsx",[],"F:\\Projects\\React_projects\\admiral_admin\\src\\modules\\TextAndImage\\TextAndImage.jsx",[],["198","199"],"F:\\Projects\\React_projects\\admiral_admin\\src\\parts\\Admin\\Admin.jsx",[],"F:\\Projects\\React_projects\\admiral_admin\\src\\parts\\Public\\Public.jsx",[],"F:\\Projects\\React_projects\\admiral_admin\\src\\parts\\Admin\\components\\Main\\Main.jsx",[],"F:\\Projects\\React_projects\\admiral_admin\\src\\parts\\Admin\\components\\Header\\Header.jsx",[],"F:\\Projects\\React_projects\\admiral_admin\\src\\parts\\Admin\\components\\Dashboard\\Dashboard.jsx",["200"],"import React, { useEffect } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { setBreadcrumbs } from '../../../../redux/app-reducer';\r\n\r\nconst Dashboard = () => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(() => {\r\n        dispatch(setBreadcrumbs([\r\n            {\r\n                name: 'Dashboard',\r\n                link: false\r\n            },\r\n        ]))\r\n    }, []);\r\n    \r\n    return (\r\n        <>\r\n            Dashboard\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Dashboard;","F:\\Projects\\React_projects\\admiral_admin\\src\\parts\\Admin\\components\\NotFound\\NotFound.jsx",[],"F:\\Projects\\React_projects\\admiral_admin\\src\\parts\\Admin\\components\\Aside\\Aside.jsx",[],"F:\\Projects\\React_projects\\admiral_admin\\src\\parts\\Admin\\components\\Header\\styled.js",[],"F:\\Projects\\React_projects\\admiral_admin\\src\\parts\\Admin\\components\\HeaderDropdown\\HeaderDropdown.jsx",[],"F:\\Projects\\React_projects\\admiral_admin\\src\\parts\\Admin\\components\\HeaderDropdown\\styled.js",[],"F:\\Projects\\React_projects\\admiral_admin\\src\\redux\\store.js",[],"F:\\Projects\\React_projects\\admiral_admin\\src\\redux\\themes-reducer.js",[],"F:\\Projects\\React_projects\\admiral_admin\\src\\api\\api.js",[],"F:\\Projects\\React_projects\\admiral_admin\\src\\parts\\Admin\\components\\Aside\\styled.js",[],"F:\\Projects\\React_projects\\admiral_admin\\src\\parts\\Admin\\components\\Breadcrumbs\\Breadcrumbs.jsx",[],"F:\\Projects\\React_projects\\admiral_admin\\src\\parts\\Admin\\components\\Breadcrumbs\\styled.js",[],"F:\\Projects\\React_projects\\admiral_admin\\src\\parts\\Admin\\components\\styled\\CardHeader.js",[],"F:\\Projects\\React_projects\\admiral_admin\\src\\parts\\Admin\\components\\styled\\CardTitle.js",[],"F:\\Projects\\React_projects\\admiral_admin\\src\\parts\\Admin\\components\\common\\CrudTable.jsx",[],"F:\\Projects\\React_projects\\admiral_admin\\src\\parts\\Admin\\components\\styled\\CrudTableContainer.js",[],"F:\\Projects\\React_projects\\admiral_admin\\src\\parts\\Admin\\components\\common\\Checkbox.jsx",[],"F:\\Projects\\React_projects\\admiral_admin\\src\\parts\\Admin\\components\\common\\ActionsWrapper.jsx",[],"F:\\Projects\\React_projects\\admiral_admin\\src\\parts\\Admin\\components\\common\\Action.jsx",["201"],"import React, { useState } from 'react';\r\nimport styled from \"styled-components\";\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nconst ActionWrapper = styled(NavLink)`\r\n    transition: .2s;\r\n    width: 28px;\r\n    margin-right: 4px;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    border-radius: 50%;\r\n    opacity: 0.6;\r\n\r\n    &:hover {\r\n        background: rgb(80 118 156 / 10%);\r\n        opacity: 1;\r\n    }\r\n\r\n    img {\r\n        max-width: 16px;\r\n    }\r\n`\r\n\r\nconst Action = (props) => {\r\n    return (\r\n        <>\r\n            <ActionWrapper to={ props.action ? false : props.to } onClick={ props.action ? (() =>  { props.action(props.itemId) }) : false } >\r\n                <img src={ props.img } alt=\"\" /> \r\n            </ActionWrapper>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Action;","F:\\Projects\\React_projects\\admiral_admin\\src\\parts\\Admin\\components\\common\\ButtonsWrapper.jsx",[],"F:\\Projects\\React_projects\\admiral_admin\\src\\parts\\Admin\\components\\common\\Pagination.jsx",["202"],"import React, { useState } from 'react';\r\nimport styled from \"styled-components\";\r\n\r\nconst PaginationWrapper = styled.ul`\r\n    display: flex;\r\n    margin: 20px 0 0 -4px;\r\n\r\n    .pagination-item {\r\n        margin-left: 4px;\r\n        font-weight: 500;\r\n        font-size: 14px;\r\n        line-height: 20px;\r\n        display: flex;\r\n        align-items: center;\r\n        justify-content: center;\r\n        text-align: center;\r\n        color: #1D1D1D;\r\n        border: 1px solid #E8EBF0;\r\n        border-radius: 8px;\r\n        background: #FFFFFF;\r\n        cursor: pointer;\r\n        width: 32px;\r\n        height: 32px;\r\n        transition: .1s;\r\n\r\n        &:hover,\r\n        &.active {\r\n            background: #4974E1;\r\n            color: #fff;\r\n        }\r\n    }\r\n`\r\n\r\nconst Pagination = ({totalItemsCount, pageSize, currentPage, onPageChange}) => {\r\n\r\n    \r\n    \r\n    const pagesCount = Math.ceil(totalItemsCount / pageSize);\r\n\r\n    let pages = [];\r\n    for (let i = 1; i <= pagesCount; i++) {\r\n        pages.push(i);\r\n    }\r\n\r\n\r\n\r\n    // let portionCount = Math.ceil(pagesCount / portionSize);\r\n    // let [portionNumber, setPortionNumber] = useState(1);\r\n    // let leftPortionPageNumber  = (portionNumber - 1) * portionSize + 1;\r\n    // let rightPortionPageNumber = portionNumber * portionSize;\r\n\r\n    // let filteredPages = pages.filter(p => p >= leftPortionPageNumber && p <= rightPortionPageNumber);\r\n\r\n    return (\r\n        <PaginationWrapper>\r\n            {/* { portionNumber > 1 && <button onClick={ () => { setPortionNumber(portionNumber - 1) } }>Prev</button>}\r\n        \r\n            {filteredPages.map(p => <span className={currentPage === p && styles.selected_page} key={p} onClick={() => { onPageChanged(p) } }>{p}</span>)}\r\n\r\n            { portionCount > portionNumber && <button onClick={ () => { setPortionNumber(portionNumber + 1) } }>Next</button>} */}\r\n\r\n\r\n\r\n            {(currentPage > 1) && <li className={`pagination-item`} onClick={() => { onPageChange(currentPage - 1) } } >\r\n                <span data-uk-icon=\"icon: arrow-left\"></span>\r\n            </li>}\r\n\r\n            {pages.map(p => <li className={(currentPage === p ? `active ` : '') + `pagination-item`} key={p} onClick={() => { onPageChange(p) } } >{p}</li>)}\r\n            \r\n            {(currentPage < pagesCount) && <li className={`pagination-item`} onClick={() => { onPageChange(currentPage + 1) } } >\r\n                <span data-uk-icon=\"icon: arrow-right\"></span>\r\n            </li>}\r\n        </PaginationWrapper>\r\n    )\r\n}\r\n\r\nexport default Pagination;","F:\\Projects\\React_projects\\admiral_admin\\src\\parts\\Admin\\components\\common\\AdmiralNavlink.jsx",["203"],"import React, { useState } from 'react';\r\nimport styled from \"styled-components\";\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nconst StyledNavlink = styled(NavLink)`\r\n    padding: 16px 32px;\r\n    box-shadow: 0px 4px 25px rgba(0, 0, 0, 0.06);\r\n    border-radius: 12px;\r\n    font-style: normal;\r\n    font-weight: 500;\r\n    font-size: 14px;\r\n    line-height: 16px;\r\n    display: inline-block;\r\n    outline: none;\r\n    border: none;\r\n    font-family: \"E-Ukraine\";\r\n    cursor: pointer;\r\n    transition: .2s;\r\n\r\n    &.only-icon {\r\n        width: 40px;\r\n        height: 40px;\r\n        padding: 0;\r\n        display: flex;\r\n        justify-content: center;\r\n        align-items: center;\r\n        box-shadow: none;\r\n    }\r\n    \r\n    & + & {\r\n        margin-left: 8px;\r\n    }\r\n\r\n    &.primary {\r\n        background-color: #4974E1;\r\n        color: #fff;\r\n\r\n        &:hover {\r\n            background-color: #4D86FF;\r\n        }\r\n\r\n        &:active {\r\n            background-color: #336CE3;\r\n        }\r\n    }\r\n\r\n    &.danger {\r\n        background-color: #FF6C6C;\r\n        color: #fff;\r\n\r\n        &:hover {\r\n            background-color: #FF5656;\r\n        }\r\n\r\n        &:active {\r\n            background-color: #EC5B5B;\r\n        }\r\n    }\r\n\r\n    &.secondary {\r\n        background-color: #F8F9FD;\r\n        color: #555;\r\n\r\n        &:hover {\r\n            background-color: #e6e7ea;\r\n            color: #333;\r\n        }\r\n    }\r\n`\r\n\r\nconst AdmiralNavlink = (props) => {\r\n    return (\r\n        <>\r\n            <StyledNavlink className={props.type} to={ props.to ? props.to : false } onClick={ props.action ? (() =>  { props.action(props.elementId) }) : false } data-uk-tooltip={props.tooltip}>\r\n                {props.children}\r\n            </StyledNavlink>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default AdmiralNavlink;","F:\\Projects\\React_projects\\admiral_admin\\src\\parts\\Admin\\components\\common\\formControlls\\SubmitButton.jsx",["204","205"],"F:\\Projects\\React_projects\\admiral_admin\\src\\parts\\Admin\\components\\styled\\StyledNotification.js",[],"F:\\Projects\\React_projects\\admiral_admin\\src\\parts\\Admin\\utils\\validators\\validators.js",[],"F:\\Projects\\React_projects\\admiral_admin\\src\\parts\\Admin\\utils\\notifications\\notifications.js",[],"F:\\Projects\\React_projects\\admiral_admin\\src\\parts\\Admin\\components\\CRUDs\\Themes\\List.jsx",["206"],"import React, { useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { getItems, setActive, deleteItem, changeSort, applyFilter } from '../../../../../redux/themes-reducer';\r\nimport Action from '../../common/Action';\r\nimport ActionsWrapper from '../../common/ActionsWrapper';\r\nimport Checkbox from '../../common/Checkbox';\r\nimport Pagination from '../../common/Pagination';\r\nimport CardHeader from '../../styled/CardHeader';\r\nimport CardTitle from '../../styled/CardTitle';\r\nimport CrudTableContainer from '../../styled/CrudTableContainer';\r\nimport Button from '../../common/AdmiralNavlink';\r\nimport { setBreadcrumbs } from '../../../../../redux/app-reducer';\r\n\r\nimport DeleteIcon from '../../../../../assets/icons/trash.svg';\r\nimport ViewIcon from '../../../../../assets/icons/view.svg';\r\nimport PlusIcon from '../../../../../assets/icons/plus.svg';\r\nimport PencilIcon from '../../../../../assets/icons/pencil.svg';\r\nimport FilterIcon from '../../../../../assets/icons/filter.svg';\r\nimport FilterContainer from '../../styled/FilterContainer';\r\nimport { Form } from 'react-final-form';\r\nimport CustomField from '../../common/formControlls/CustomField';\r\nimport ButtonsWrapper from '../../common/ButtonsWrapper';\r\nimport SubmitButton from '../../common/formControlls/SubmitButton';\r\n\r\n\r\nconst CrudTableHead = (props) => {\r\n    const classValue = (fields, onClick, sortField, sortType) => {\r\n        return (\r\n            fields.map(field => {\r\n                let classString = '';\r\n\r\n                if (field.sortAllow) {\r\n                    classString += `sort_allow`;\r\n                }\r\n\r\n                if (sortField === field.code) {\r\n                    classString += ` ${sortType}`;\r\n                }\r\n\r\n                if (field.actionsColumn) {\r\n                    classString = `actions-head`;\r\n                }\r\n\r\n                \r\n\r\n                return (\r\n                    <th key={field.label} className={classString} onClick={\r\n                        field.sortAllow ? (() => {\r\n                            onClick(field.code)\r\n                            console.log(field.sortAllow)\r\n                        }) : (() => {\r\n                            \r\n                        })\r\n                    }>{field.label}</th>\r\n                )\r\n            })\r\n        )\r\n    }\r\n\r\n    return (\r\n        <thead>\r\n            <tr>\r\n                {classValue(props.fields, props.onClick, props.sortField, props.sortType)}\r\n            </tr>\r\n        </thead>\r\n    )\r\n}\r\n\r\nconst List = () => {\r\n    \r\n    const items = useSelector(state => state.themes.items);\r\n    const totalCount = useSelector(state => state.themes.totalCount);\r\n    const currentPage = useSelector(state => state.themes.currentPage);\r\n    const sortField = useSelector(state => state.themes.sortField);\r\n    const sortType = useSelector(state => state.themes.sortType);\r\n    const pageSize = useSelector(state => state.themes.pageSize);\r\n    \r\n    const dispatch = useDispatch();\r\n\r\n    const [isFilterOpen, toggleFilter] = useState(false);\r\n    \r\n    useEffect(() => {\r\n        dispatch(getItems(currentPage, pageSize));\r\n        dispatch(setBreadcrumbs([\r\n            {\r\n                name: 'Dashboard',\r\n                link: '/admiral-admin'\r\n            },\r\n            {\r\n                name: 'Themes',\r\n                link: false\r\n            }\r\n        ]))\r\n    }, []);\r\n\r\n    const setActiveItem = (id) => {\r\n        dispatch(setActive(id));\r\n    }\r\n\r\n    const onClickDeleteItem = (id) => {\r\n        dispatch(deleteItem(id));\r\n    }\r\n\r\n    const onClickSortTable = (code) => {\r\n        dispatch(changeSort(sortField, sortType, code));\r\n    }\r\n\r\n    const onPageChange = (pageNumber) => {\r\n        dispatch(getItems(pageNumber, pageSize));\r\n    }\r\n\r\n    const onClickFilterToggle = (pageNumber) => {\r\n        toggleFilter(!isFilterOpen);\r\n    }\r\n\r\n    const onFilterSubmit = (values) => {\r\n        // window.alert(JSON.stringify(values, 0, 2))\r\n        dispatch(applyFilter(values));\r\n    }\r\n    \r\n    const onClickFilterReset = (form) => {\r\n        dispatch(applyFilter());\r\n        form.reset();\r\n    }\r\n\r\n    const fields = [\r\n        {\r\n            code: 'id',\r\n            label: 'Id',\r\n            sortAllow: true\r\n        },\r\n        {\r\n            code: 'active',\r\n            label: 'Active',\r\n            sortAllow: true\r\n        },\r\n        {\r\n            code: 'name',\r\n            label: 'Name',\r\n            sortAllow: true\r\n        },\r\n        {\r\n            code: 'create_date',\r\n            label: 'Create date',\r\n            sortAllow: true\r\n        },\r\n        {\r\n            code: 'update_date',\r\n            label: 'Update date',\r\n            sortAllow: true\r\n        },\r\n        {\r\n            label: 'Actions',\r\n            sortAllow: false,\r\n            actionsColumn: true\r\n        }\r\n    ];\r\n    \r\n    return (\r\n        <>\r\n            <FilterContainer className={isFilterOpen ? 'active': ''}>\r\n                <Form\r\n                    onSubmit={onFilterSubmit}\r\n                    initialValues={''}\r\n                    render={({ handleSubmit, form, submitting, pristine, values }) => (\r\n                        <form onSubmit={handleSubmit} className={'uk-margin-top'}>\r\n                            <div className={'uk-child-width-1-2'} data-uk-grid>\r\n                                <div>\r\n                                    <CustomField name={'name'} type={'text'} placeholder={'Name'} />\r\n                                </div>\r\n                                <div>\r\n                                    <CustomField name={'update_by'} type={'text'} placeholder={'Updated by'} />\r\n                                </div>\r\n                            </div>\r\n                            \r\n                            <ButtonsWrapper>\r\n                                <SubmitButton type=\"submit\" disabled={submitting || pristine} className={'primary small'}>Filter</SubmitButton>\r\n                                <SubmitButton type=\"button\" onClick={() => { onClickFilterReset(form) }} disabled={submitting || pristine} className={'secondary small'}>Reset</SubmitButton>\r\n                            </ButtonsWrapper>\r\n                        </form>\r\n                    )}\r\n                />\r\n            </FilterContainer>\r\n\r\n            <CardHeader>\r\n                <div className=\"uk-flex uk-flex-middle\">\r\n                    <CardTitle>Themes</CardTitle>\r\n                    <Button type={'primary only-icon uk-margin-left'} to={'/admiral-admin/themes/create'} tooltip=\"Create theme\"><img src={PlusIcon} alt=\"create\" /></Button>\r\n                </div>\r\n                <Button type={'secondary only-icon uk-margin-left'} action={ onClickFilterToggle } tooltip={isFilterOpen ? 'Close filter': 'Open filter'}><img src={FilterIcon} alt=\"toggle filter\" /></Button>\r\n            </CardHeader>\r\n\r\n            {items && <CrudTableContainer>\r\n                <CrudTableHead fields={fields} onClick={onClickSortTable} sortField={sortField} sortType={sortType}/>\r\n                \r\n                <tbody>\r\n                    {items.map(item => {\r\n                        return (\r\n                            <tr key={item.id}>\r\n                                <td>{item.id}</td>\r\n                                <td>\r\n                                    <Checkbox name={'active_' + item.id} id={'checkbox_' + item.id} idNumber={item.id} checked={item.active === '1' ? 'checked' : ''} setActiveItem={setActiveItem}/>\r\n                                </td>\r\n                                <td>{item.name}</td>\r\n                                <td>{item.create_date}</td>\r\n                                <td>{item.update_date}</td>\r\n                                <td>\r\n                                    <ActionsWrapper>\r\n                                        <Action action={ onClickDeleteItem } itemId={item.id} img={DeleteIcon}/>\r\n                                        <Action to={`/admiral-admin/themes/view/${item.id}`} itemId={item.id} img={ViewIcon}/>\r\n                                        <Action to={`/admiral-admin/themes/update/${item.id}`} itemId={item.id} img={PencilIcon}/>\r\n                                    </ActionsWrapper>\r\n                                </td>\r\n                            </tr>\r\n                        )\r\n                    })}\r\n                </tbody>\r\n            </CrudTableContainer>}\r\n\r\n            <Pagination totalItemsCount={totalCount} pageSize={pageSize} currentPage={currentPage} onPageChange={onPageChange} />\r\n        </>\r\n    );\r\n};\r\n\r\nexport default List;","F:\\Projects\\React_projects\\admiral_admin\\src\\parts\\Admin\\components\\CRUDs\\Themes\\View.jsx",["207","208"],"import React, { useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { setActive, getItemData, deleteItem } from '../../../../../redux/themes-reducer';\r\nimport CardHeader from '../../styled/CardHeader';\r\nimport CardTitle from '../../styled/CardTitle';\r\nimport { useParams } from 'react-router-dom';\r\nimport ButtonsWrapper from '../../common/ButtonsWrapper';\r\nimport Button from '../../common/AdmiralNavlink';\r\nimport styled from 'styled-components';\r\nimport { setBreadcrumbs } from '../../../../../redux/app-reducer';\r\n\r\nconst ViewTable = styled.table`\r\n    text-align: left;\r\n    border-radius: 20px;\r\n\r\n    td, th {\r\n        padding: 20px 30px;\r\n        border-bottom: 1px solid #e4e4e4;\r\n        font-size: 14px;\r\n    }\r\n\r\n    th {\r\n        font-weight: 400;\r\n        color: #99A6B6;\r\n    }\r\n\r\n    td {\r\n        font-weight: 300;\r\n        color: #1D1D1D;\r\n    }\r\n\r\n    tr:last-child td, tr:last-child th {\r\n        border-width: 0px;\r\n    }\r\n`\r\n\r\nconst View = () => {\r\n    const item = useSelector(state => state.themes.item);\r\n    let resultArray = [];\r\n\r\n    if (item) {\r\n        let itemKeys = Object.keys(item);\r\n        let itemValues = Object.values(item);\r\n\r\n        for (let i = 0; i < itemKeys.length; i++) {\r\n            resultArray.push(<tr><th>{itemKeys[i]}</th><td>{itemValues[i]}</td></tr>)   \r\n        }\r\n    }\r\n\r\n    const setActiveTheme = (id) => {\r\n        dispatch(setActive(id));\r\n    }\r\n\r\n    const onClickDeleteTheme = (id) => {\r\n        dispatch(deleteItem(id));\r\n    }\r\n\r\n    const dispatch = useDispatch();\r\n    let {id} = useParams();\r\n    \r\n    useEffect(() => {\r\n        dispatch(getItemData(id));\r\n    }, [id]);\r\n    \r\n    useEffect(() => {\r\n        if (item) {\r\n            let itemKeys = Object.keys(item);\r\n            let itemValues = Object.values(item);\r\n\r\n            for (let i = 0; i < itemKeys.length; i++) {\r\n                resultArray.push(<tr><th>{itemKeys[i]}</th><td>{itemValues[i]}</td></tr>)   \r\n            }\r\n\r\n            dispatch(setBreadcrumbs([\r\n                {\r\n                    name: 'Dashboard',\r\n                    link: '/admiral-admin'\r\n                },\r\n                {\r\n                    name: 'Themes',\r\n                    link: '/admiral-admin/themes'\r\n                },\r\n                {\r\n                    name: item.name,\r\n                    link: false\r\n                }\r\n            ]))\r\n        }\r\n    }, [item]);\r\n\r\n    return (\r\n        <>\r\n            <CardHeader>\r\n                <CardTitle>Theme view: {item && item.name}</CardTitle>\r\n            </CardHeader>\r\n\r\n            <ViewTable>\r\n                {resultArray} \r\n            </ViewTable>\r\n\r\n            <ButtonsWrapper>\r\n                <Button type={'primary'} action={setActiveTheme} elementId={id} to={false}>Set active theme</Button>\r\n                <Button type={'danger'} action={onClickDeleteTheme} elementId={id} to={'/admiral-admin/themes'}>Delete theme</Button>\r\n            </ButtonsWrapper>\r\n\r\n        </>\r\n    );\r\n};\r\n\r\nexport default View;","F:\\Projects\\React_projects\\admiral_admin\\src\\parts\\Admin\\components\\CRUDs\\Themes\\Create.jsx",["209","210","211","212","213","214"],"import React, { useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { createItem } from '../../../../../redux/themes-reducer';\r\nimport CardHeader from '../../styled/CardHeader';\r\nimport CardTitle from '../../styled/CardTitle';\r\nimport { useParams } from 'react-router-dom';\r\nimport ButtonsWrapper from '../../common/ButtonsWrapper';\r\nimport Button from '../../common/AdmiralNavlink';\r\nimport SubmitButton from '../../common/formControlls/SubmitButton';\r\nimport { Form, Field } from 'react-final-form'\r\nimport { required } from '../../../utils/validators/validators';\r\nimport { setBreadcrumbs } from '../../../../../redux/app-reducer';\r\nimport CustomField from '../../common/formControlls/CustomField';\r\n\r\nconst Create = () => {\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(() => {\r\n        dispatch(setBreadcrumbs([\r\n            {\r\n                name: 'Dashboard',\r\n                link: '/admiral-admin'\r\n            },\r\n            {\r\n                name: 'Themes',\r\n                link: '/admiral-admin/themes'\r\n            },\r\n            {\r\n                name: 'Create',\r\n                link: false\r\n            }\r\n        ]))\r\n    }, []);\r\n\r\n    const onSubmit = values => {\r\n        dispatch(createItem(values));\r\n    }\r\n    \r\n    return (\r\n        <>\r\n            <CardHeader>\r\n                <CardTitle>New theme creation</CardTitle>\r\n            </CardHeader>\r\n\r\n            <Form\r\n                onSubmit={onSubmit}\r\n                initialValues={''}\r\n                validate={values => {\r\n                    const errors = {}\r\n                    if (!values.name) {\r\n                        errors.name = 'This is required field'\r\n                    }\r\n                    return errors\r\n                }}\r\n                render={({ handleSubmit, form, submitting, pristine, values }) => (\r\n                    <form onSubmit={handleSubmit} className={'uk-margin-top'}>\r\n                        <div>\r\n                            <CustomField name={'name'} type={'text'} placeholder={'Name'} />\r\n                        </div>\r\n                        \r\n                        <ButtonsWrapper>\r\n                            <SubmitButton type=\"submit\" disabled={submitting || pristine} className={'primary'}>Create theme</SubmitButton>\r\n                        </ButtonsWrapper>\r\n                    </form>\r\n                )}\r\n            />\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Create;","F:\\Projects\\React_projects\\admiral_admin\\src\\parts\\Admin\\components\\CRUDs\\Themes\\Update.jsx",["215","216"],"import React, { useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { setActive, deleteItem, getItemData, updateItem } from '../../../../../redux/themes-reducer';\r\nimport CardHeader from '../../styled/CardHeader';\r\nimport CardTitle from '../../styled/CardTitle';\r\nimport { useParams } from 'react-router-dom';\r\nimport ButtonsWrapper from '../../common/ButtonsWrapper';\r\nimport Button from '../../common/AdmiralNavlink';\r\nimport styled from 'styled-components';\r\nimport { Field, Form } from 'react-final-form';\r\nimport SubmitButton from '../../common/formControlls/SubmitButton';\r\nimport { setBreadcrumbs } from '../../../../../redux/app-reducer';\r\n\r\nconst StyledField = styled(Field)`\r\n    width: 100%;\r\n    background: #F9F9F9;\r\n    border: 1px solid #E8EBF0;\r\n    padding: 14px 20px;\r\n    font-weight: 300;\r\n    font-size: 16px;\r\n    line-height: 18px;\r\n    letter-spacing: -0.03em;\r\n    color: #99A6B6;\r\n    border-radius: 12px;\r\n    outline: none;\r\n    transition: border-color .3s;\r\n`\r\n\r\nconst Update = () => {\r\n    const item = useSelector(state => state.themes.item);\r\n    const dispatch = useDispatch();\r\n    let {id} = useParams();\r\n    \r\n    const setActiveTheme = (id) => {\r\n        dispatch(setActive(id));\r\n    }\r\n\r\n    const onClickDeleteTheme = (id) => {\r\n        dispatch(deleteItem(id));\r\n    }\r\n\r\n    useEffect(() => {\r\n        dispatch(getItemData(id));\r\n    }, [id]);\r\n\r\n    useEffect(() => {\r\n        item && dispatch(setBreadcrumbs([\r\n            {\r\n                name: 'Dashboard',\r\n                link: '/admiral-admin'\r\n            },\r\n            {\r\n                name: 'Themes',\r\n                link: '/admiral-admin/themes'\r\n            },\r\n            {\r\n                name: item.name,\r\n                link: false\r\n            }\r\n        ]))\r\n    }, [item]);\r\n\r\n    const onSubmit = values => {\r\n        // window.alert(JSON.stringify(values, 0, 2))\r\n        dispatch(updateItem(values));\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <CardHeader>\r\n                <CardTitle>Theme update: {item && item.name}</CardTitle>\r\n            </CardHeader>\r\n\r\n            {item && <Form\r\n                onSubmit={onSubmit}\r\n                initialValues={{name: item.name, id: item.id}}\r\n                render={({ handleSubmit, form, submitting, pristine, values }) => (\r\n                    <form onSubmit={handleSubmit} className={'uk-margin-top'}>\r\n                        <div>\r\n                            {item && <StyledField\r\n                                name=\"name\"\r\n                                component=\"input\"\r\n                                type=\"text\"\r\n                                placeholder=\"Theme name\"\r\n                                // initialValue={item.name}\r\n                                // defaultValue={item.name}\r\n                            />}\r\n                        </div>\r\n                        \r\n                        <ButtonsWrapper>\r\n                            <SubmitButton type=\"submit\" disabled={submitting || pristine} className={'primary'}>Update theme</SubmitButton>\r\n                            <Button type={'primary'} action={setActiveTheme} elementId={id} to={false}>Set active theme</Button>\r\n                            <Button type={'danger'} action={onClickDeleteTheme} elementId={id} to={'/admiral-admin/themes'}>Delete theme</Button>\r\n                        </ButtonsWrapper>\r\n                    </form>\r\n                )}\r\n            />}\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Update;","F:\\Projects\\React_projects\\admiral_admin\\src\\redux\\app-reducer.js",[],"F:\\Projects\\React_projects\\admiral_admin\\src\\parts\\Admin\\components\\styled\\FilterContainer.js",[],"F:\\Projects\\React_projects\\admiral_admin\\src\\parts\\Admin\\components\\common\\formControlls\\CustomField.jsx",[],"F:\\Projects\\React_projects\\admiral_admin\\src\\parts\\Admin\\components\\Login\\Login.jsx",[],"F:\\Projects\\React_projects\\admiral_admin\\src\\parts\\Admin\\components\\AdminWrapper\\AdminWrapper.jsx",[],"F:\\Projects\\React_projects\\admiral_admin\\src\\redux\\auth-reducer.js",[],{"ruleId":"217","replacedBy":"218"},{"ruleId":"219","replacedBy":"220"},{"ruleId":"217","replacedBy":"221"},{"ruleId":"219","replacedBy":"222"},{"ruleId":"223","severity":1,"message":"224","line":16,"column":8,"nodeType":"225","endLine":16,"endColumn":10,"suggestions":"226"},{"ruleId":"227","severity":1,"message":"228","line":1,"column":17,"nodeType":"229","messageId":"230","endLine":1,"endColumn":25},{"ruleId":"227","severity":1,"message":"228","line":1,"column":17,"nodeType":"229","messageId":"230","endLine":1,"endColumn":25},{"ruleId":"227","severity":1,"message":"228","line":1,"column":17,"nodeType":"229","messageId":"230","endLine":1,"endColumn":25},{"ruleId":"227","severity":1,"message":"228","line":1,"column":17,"nodeType":"229","messageId":"230","endLine":1,"endColumn":25},{"ruleId":"227","severity":1,"message":"231","line":3,"column":10,"nodeType":"229","messageId":"230","endLine":3,"endColumn":17},{"ruleId":"223","severity":1,"message":"232","line":94,"column":8,"nodeType":"225","endLine":94,"endColumn":10,"suggestions":"233"},{"ruleId":"223","severity":1,"message":"224","line":63,"column":8,"nodeType":"225","endLine":63,"endColumn":12,"suggestions":"234"},{"ruleId":"223","severity":1,"message":"235","line":89,"column":8,"nodeType":"225","endLine":89,"endColumn":14,"suggestions":"236"},{"ruleId":"227","severity":1,"message":"237","line":2,"column":23,"nodeType":"229","messageId":"230","endLine":2,"endColumn":34},{"ruleId":"227","severity":1,"message":"238","line":6,"column":10,"nodeType":"229","messageId":"230","endLine":6,"endColumn":19},{"ruleId":"227","severity":1,"message":"239","line":8,"column":8,"nodeType":"229","messageId":"230","endLine":8,"endColumn":14},{"ruleId":"227","severity":1,"message":"240","line":10,"column":16,"nodeType":"229","messageId":"230","endLine":10,"endColumn":21},{"ruleId":"227","severity":1,"message":"241","line":11,"column":10,"nodeType":"229","messageId":"230","endLine":11,"endColumn":18},{"ruleId":"223","severity":1,"message":"224","line":33,"column":8,"nodeType":"225","endLine":33,"endColumn":10,"suggestions":"242"},{"ruleId":"223","severity":1,"message":"224","line":44,"column":8,"nodeType":"225","endLine":44,"endColumn":12,"suggestions":"243"},{"ruleId":"223","severity":1,"message":"224","line":61,"column":8,"nodeType":"225","endLine":61,"endColumn":14,"suggestions":"244"},"no-native-reassign",["245"],"no-negated-in-lhs",["246"],["245"],["246"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["247"],"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'NavLink' is defined but never used.","React Hook useEffect has missing dependencies: 'currentPage', 'dispatch', and 'pageSize'. Either include them or remove the dependency array.",["248"],["249"],"React Hook useEffect has missing dependencies: 'dispatch' and 'resultArray'. Either include them or remove the dependency array.",["250"],"'useSelector' is defined but never used.","'useParams' is defined but never used.","'Button' is defined but never used.","'Field' is defined but never used.","'required' is defined but never used.",["251"],["252"],["253"],"no-global-assign","no-unsafe-negation",{"desc":"254","fix":"255"},{"desc":"256","fix":"257"},{"desc":"258","fix":"259"},{"desc":"260","fix":"261"},{"desc":"254","fix":"262"},{"desc":"258","fix":"263"},{"desc":"264","fix":"265"},"Update the dependencies array to be: [dispatch]",{"range":"266","text":"267"},"Update the dependencies array to be: [currentPage, dispatch, pageSize]",{"range":"268","text":"269"},"Update the dependencies array to be: [dispatch, id]",{"range":"270","text":"271"},"Update the dependencies array to be: [dispatch, item, resultArray]",{"range":"272","text":"273"},{"range":"274","text":"267"},{"range":"275","text":"271"},"Update the dependencies array to be: [dispatch, item]",{"range":"276","text":"277"},[396,398],"[dispatch]",[3422,3424],"[currentPage, dispatch, pageSize]",[1675,1679],"[dispatch, id]",[2434,2440],"[dispatch, item, resultArray]",[1195,1197],[1420,1424],[1827,1833],"[dispatch, item]"]